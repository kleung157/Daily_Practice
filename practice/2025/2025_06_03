Date: 06/03/2025

############################

Website:
DataLemur

Difficulty:
Easy

Question Type:
Python

Question:
Pascals Triangle - Uber Python Interview Question
Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
For numRows = 1, you should return [[1]].
For numRows = 4, you should return [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]].

Data Dictionary:
Table name = ''
N/A

Code:
Solution #1 (iterative approach)
def generate(numRows):
    triangle = []
    for row_num in range(numRows):
        row = [1] * (row_num + 1)
        for j in range(1, row_num):
            row[j] = triangle[row_num - 1][j - 1] + triangle[row_num - 1][j]
        triangle.append(row)
    return triangle

Solution #2 (recursive approach)
def generate(numRows):
    if numRows == 1:
        return [[1]]
        
    triangle = generate(numRows - 1)
    last_row = triangle[-1]
    new_row = [1]
    
    for i in range(1, len(last_row)):
        new_row.append(last_row[i - 1] + last_row[i])
        
    new_row.append(1)
    triangle.append(new_row)
    
    return triangle

############################

Website:
DataLemur

Difficulty:
Easy

Question Type:
SQL

Question:
App Click-through Rate (CTR) - Facebook SQL Interview Question
Assume you have an events table on Facebook app analytics. 
Write a query to calculate the click-through rate (CTR) for the app in 2022 and round the results to 2 decimal places.
Definition and note:
Percentage of click-through rate (CTR) = 100.0 * Number of clicks / Number of impressions
To avoid integer division, multiply the CTR by 100.0, not 100.
Explanation:
Let's consider an example of App 123. This app has a click-through rate (CTR) of 50.00% because out of the 2 impressions it received, it got 1 click.
To calculate the CTR, we divide the number of clicks by the number of impressions, and then multiply the result by 100.0 to express it as a percentage. 
In this case, 1 divided by 2 equals 0.5, and when multiplied by 100.0, it becomes 50.00%. So, the CTR of App 123 is 50.00%.

Data Dictionary:
Table name = 'events'
app_id: integer(int)
event_type: string(str)
timestamp: datetime(str)

Code:
Solution #1 (CTEs and CAST)
/* SELECT to preview data */
SELECT * FROM events;

/* click-through rate (CTR) = 100.0 * num clicks / num of impressions */
/* click-through rate in 2022 and round to 2 decimal places */
/* app_id, CTR */
WITH clicks AS (
    SELECT
        app_id,
        COUNT(event_type) AS num_clicks
    FROM events
    WHERE event_type = 'click'
        AND EXTRACT(YEAR FROM timestamp) = 2022
    GROUP BY 1
),
impressions AS (
    SELECT
        app_id,
        COUNT(event_type) AS num_impressions
    FROM events
    WHERE event_type = 'impression'
        AND EXTRACT(YEAR FROM timestamp) = 2022
    GROUP BY 1
)
SELECT 
    c.app_id,
    CAST((100.0 * num_clicks / num_impressions) AS DECIMAL(10,2)) AS ctr
FROM clicks AS c
JOIN impressions AS i
    ON c.app_id = i.app_id;

Solution #2 (ROUND and SUM with EXTRACT YEAR)
SELECT
    app_id,
    ROUND(100.0 *
        SUM(CASE WHEN event_type = 'click' THEN 1 ELSE 0 END) /
        SUM(CASE WHEN event_type = 'impression' THEN 1 ELSE 0 END), 2) AS ctr
FROM events
WHERE EXTRACT(YEAR FROM timestamp) = 2022
GROUP BY 1;

Solution #3 (ROUND and COUNT with date range)
SELECT
  app_id,
  ROUND(100.0 *
    COUNT(CASE WHEN event_type = 'click' THEN 1 ELSE NULL END) /
    COUNT(CASE WHEN event_type = 'impression' THEN 1 ELSE NULL END), 2)  AS ctr_rate
FROM events
WHERE timestamp >= '2022-01-01' 
  AND timestamp < '2023-01-01'
GROUP BY app_id;

############################

Website:
StrataScratch - ID 9602

Difficulty:
Easy

Question Type:
SQL

Question:
Find hotels in the Netherlands that got complaints from guests about room dirtiness (word "dirty" in its negative review). 
Output all the columns in your results

Data Dictionary:
Table name = 'hotel_reviews'
additional_number_of_scoring: bigint(int)
average_score: double precision(flt)
days_since_review: text(str)
hotel_address: text(str)
hotel_name: text(str)
lat: double precision(flt)
lng: double precision(flt)
negative_review: text(str)
positive_review: text(str)
review_date: date(str)
review_total_negative_word_counts: bigint(int)
review_total_positive_word_counts: bigint(int)
reviewer_nationality: text(str)
reviewer_score: double precision(flt)
tags: text(str)
total_number_of_reviews: bigint(int)
total_number_of_reviews_reviewer_has_given: bigint(int)

Code:
Solution #1 (use LOWER to be case-insensitive for letters)
/* SELECT to preview data */
SELECT * FROM hotel_reviews;

/* Hotels in Netherlands with complaints from guests about room dirtiness */
/* word 'dirty' in the negative review */
/* All columns */
SELECT
    additional_number_of_scoring,
    average_score,
    days_since_review,
    hotel_address,
    hotel_name,
    lat,
    lng,
    negative_review,
    positive_review,
    review_date,
    review_total_negative_word_counts,
    review_total_positive_word_counts,
    reviewer_nationality,
    reviewer_score,
    tags,
    total_number_of_reviews,
    total_number_of_reviews_reviewer_has_given
FROM hotel_reviews
WHERE hotel_address LIKE '%Netherlands%'
    AND LOWER(negative_review) LIKE '%dirty%';
    
############################

Website:
StrataScratch - ID 9613

Difficulty:
Easy

Question Type:
SQL

Question:
Apple - Find the date with the highest opening stock price
Find the date when Apple's opening stock price reached its maximum

Data Dictionary:
Table name = 'aapl_historical_stock_price'
close: double precision(flt)
date: date(str)
high: double precision(flt)
id: bigint(int)
low: double precision(flt)
month: bigint(int)
open: double precision(flt)
volume: bigint(int)
year: bigint(int)

Code:
Solution #1 (ORDER and LIMIT)
/* SELECT to preview data */
SELECT * FROM aapl_historical_stock_price;

/* Date with Apple's opening stock price reached maximum */
/* date */
SELECT
    date,
    open
FROM aapl_historical_stock_price
ORDER by open DESC
LIMIT 1;

Solution #2 (subquery)
SELECT
    date
FROM aapl_historical_stock_price
WHERE open = (SELECT MAX(open) FROM aapl_historical_stock_price);

############################

Website:
StrataScratch - ID 9615

Difficulty:
Easy

Question Type:
SQL

Question:
Airbnb - Solo Apartment Search
Find the search details for apartments where the property type is Apartment and the accommodation is suitable for one person.

Data Dictionary:
Table name = 'airbnb_search_details'
accomodates: bigint(int)
amenities: text(str)
bathrooms: bigint(int)
bed_type: text(str)
bedrooms: bigint(int)
beds: bigint(int)
cancellation_policy: text(str)
city: text(str)
cleaning_fee: boolean(str)
host_identity_verified: text(str)
host_response_rate: text(str)
host_since: date(str)
id: bigint(int)
neighbourhood: text(str)
number_of_reviews: bigint(int)
price: double precision(flt)
property_type: text(str)
review_scores_rating: double precision (flt)
room_type: text(str)
zipcode: bigint(int)

Code:
/* SELECT to preview data */
SELECT * FROM airbnb_search_details;

/* Search details for apartments where property_type = Apartment and accomodates for one */
SELECT
    accommodates,
    amenities,
    bathrooms,
    bed_type,
    bedrooms,
    beds,
    cancellation_policy,
    city,
    cleaning_fee,
    host_identity_verified,
    host_response_rate,
    host_since,
    id,
    neighbourhood,
    number_of_reviews,
    price,
    property_type,
    review_scores_rating,
    room_type,
    zipcode
FROM airbnb_search_details
WHERE property_type = 'Apartment'
    AND accommodates = 1;

############################
